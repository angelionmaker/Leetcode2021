/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode dummy = new ListNode(0);
        ListNode p = l1, q = l2, curr = dummy;
        
        int carry = 0;
        
        while(p!=null || q!=null){
            int x = (p == null) ? 0:p.val;
            int y = (q == null) ? 0:q.val;
            
            int sum = carry + x + y;
            ListNode node = new ListNode(sum % 10);
            curr.next = node;
            
            if(p!= null) p = p.next; % 传递 
            if(q!= null) q = q.next; % 传递
            curr = curr.next; % 传递
            
            carry = sum / 10;
        }
        
        if(carry == 1){ % 最后一个有可能多传一个
            ListNode node = new ListNode(carry);
            curr.next = node;
        }
        
        return dummy.next;
    }
}
